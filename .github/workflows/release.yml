# Automatically create a release when tagged

name: Release

on:
  push:
    tags: ["v*"]

permissions:
  contents: read

concurrency: release-${{ github.ref }}

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest
    outputs:
      linux_builder_repo_and_digest: ${{ steps.find-linux.outputs.builder_repo_and_digest }}
      windows_builder_repo_and_digest: ${{ steps.find-windows.outputs.builder_repo_and_digest }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v5
      - name: Find Linux builder container digest
        id: find-linux
        uses: ./.github/find-container-digest
        with:
          builder_image: linux
      - name: Find Windows builder container digest
        id: find-windows
        uses: ./.github/find-container-digest
        with:
          builder_image: windows

  stable:
    name: Stable
    needs: setup
    uses: ./.github/workflows/build.yml
    with:
      linux_builder_repo_and_digest: ${{ needs.setup.outputs.linux_builder_repo_and_digest }}
      macos_enable: true
      openslide_bin_repo: ${{ github.repository }}
      openslide_bin_ref: ${{ github.ref }}
      suffix: ""
      windows_builder_repo_and_digest: ${{ needs.setup.outputs.windows_builder_repo_and_digest }}

  release:
    name: Release
    environment:
      name: pypi
      url: https://pypi.org/p/openslide-bin
    needs: [setup, stable]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Update Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: "openslide[-_]bin-*"
          path: upload
          merge-multiple: true
      - name: Unpack source tarball
        run: |
          tar xf "upload/openslide-bin-${{ needs.stable.outputs.version }}.tar.gz"
          mv "openslide-bin-${{ needs.stable.outputs.version }}"/* .
          rm -r "openslide-bin-${{ needs.stable.outputs.version }}"
      - name: Collect PyPI artifacts
        run: |
          mkdir pypi
          cp -a \
              "upload/openslide-bin-${{ needs.stable.outputs.version }}.tar.gz" \
              upload/*.whl pypi/
      - name: Release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: pypi
          repository-url: ${{ vars.PYPI_URL }}
      - name: Release to GitHub
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "## Changes" > changes
          awk -e '/^## / && ok {exit}' \
              -e '/^## / {ok=1; next}' \
              -e 'ok {print}' \
              CHANGELOG.md >> changes
          echo -e "## Versions\n" >> changes
          ./bintool versions \
              "upload/openslide-bin-${{ needs.stable.outputs.version }}"-*.{tar.xz,zip} \
              >> changes

          gh release create --latest --verify-tag \
              --repo "${{ github.repository }}" \
              --title "openslide-bin ${{ needs.stable.outputs.version }}" \
              --notes-file changes \
              "${{ github.ref_name }}" \
              upload/*
